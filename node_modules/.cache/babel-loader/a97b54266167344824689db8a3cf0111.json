{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport iconLeft from '../icons/left';\nimport iconRight from '../icons/right';\nvar Direction;\n(function (Direction) {\n  Direction[\"Next\"] = \"next\";\n  Direction[\"Prev\"] = \"prev\";\n})(Direction || (Direction = {}));\nfunction getData(feature) {\n  var _a;\n  var layerData = ['layer', {\n    key: 'id',\n    value: feature.layer.id\n  }, {\n    key: 'type',\n    value: feature.layer.type\n  }, {\n    key: 'source',\n    value: feature.layer.source\n  }, {\n    key: 'source-layer',\n    value: (_a = feature.layer['source-layer']) !== null && _a !== void 0 ? _a : 'â€”'\n  }];\n  var featureData = ['properties'];\n  if (feature.id) {\n    featureData.push({\n      key: '$id',\n      value: feature.id\n    });\n  }\n  Object.entries(feature.properties).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    featureData.push({\n      key: key,\n      value: value\n    });\n  });\n  if (featureData.length === 1) {\n    featureData.pop(); // remove title if there are no properties\n  }\n  return [].concat(layerData, featureData);\n}\nexport default function popupTemplate(features) {\n  var current = 0;\n  var root = document.createElement('div');\n  root.classList.add('mapbox-control-inspect-popup');\n  var content = document.createElement('div');\n  content.classList.add('mapbox-control-inspect-content');\n  var templatePrev = function templatePrev() {\n    var button = document.createElement('div');\n    button.setAttribute('type', 'button');\n    button.classList.add('mapbox-control-inspect-prev');\n    button.appendChild(iconLeft());\n    button.addEventListener('click', function () {\n      return goTo(Direction.Prev);\n    });\n    return button;\n  };\n  var templateNext = function templateNext() {\n    var button = document.createElement('div');\n    button.setAttribute('type', 'button');\n    button.classList.add('mapbox-control-inspect-next');\n    button.appendChild(iconRight());\n    button.addEventListener('click', function () {\n      return goTo(Direction.Next);\n    });\n    return button;\n  };\n  var templateTitle = function templateTitle() {\n    var title = document.createElement('div');\n    title.classList.add('mapbox-control-inspect-current');\n    title.textContent = \"\".concat(current + 1, \" / \").concat(features.length);\n    return title;\n  };\n  var templateHeader = function templateHeader() {\n    var header = document.createElement('div');\n    header.classList.add('mapbox-control-inspect-header');\n    header.appendChild(templatePrev());\n    header.appendChild(templateTitle());\n    header.appendChild(templateNext());\n    return header;\n  };\n  var templateFeature = function templateFeature(feature) {\n    var table = document.createElement('table');\n    table.classList.add('mapbox-control-inspect-grid');\n    var data = getData(feature);\n    data.forEach(function (record) {\n      var row = document.createElement('tr');\n      if (typeof record === 'string') {\n        var caption = document.createElement('th');\n        caption.classList.add('mapbox-control-inspect-caption');\n        caption.colSpan = 2;\n        caption.textContent = record;\n        row.appendChild(caption);\n        table.append(row);\n        return;\n      }\n      var key = document.createElement('th');\n      var value = document.createElement('td');\n      key.classList.add('mapbox-control-inspect-key');\n      value.classList.add('mapbox-control-inspect-value');\n      key.textContent = record.key;\n      value.textContent = String(record.value);\n      row.appendChild(key);\n      row.appendChild(value);\n      table.append(row);\n    });\n    return table;\n  };\n  function goTo(dir) {\n    if (dir === Direction.Prev) {\n      current = current !== 0 ? current - 1 : features.length - 1;\n    } else if (dir === Direction.Next) {\n      current = current !== features.length - 1 ? current + 1 : 0;\n    }\n    content.innerHTML = '';\n    content.appendChild(templateHeader());\n    content.appendChild(templateFeature(features[current]));\n  }\n  root.appendChild(content);\n  if (!features.length) {\n    content.textContent = 'No features';\n  } else {\n    if (features.length > 1) {\n      content.appendChild(templateHeader());\n    }\n    content.appendChild(templateFeature(features[current]));\n  }\n  return root;\n}","map":null,"metadata":{},"sourceType":"module"}