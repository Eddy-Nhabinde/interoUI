{"ast":null,"code":"import { LngLat } from 'mapbox-gl';\nimport { contourLayer, cornersLayer } from './layers';\nimport { Visibility, Cursor } from './types';\n/**\n * Find the closest point on the line AB from the point P\n */\nfunction getClosestPoint(a, b, p) {\n  var u = [p[0] - a[0], p[1] - a[1]]; // vector a->p\n  var v = [b[0] - a[0], b[1] - a[1]]; // vector a->b\n  var v2 = Math.pow(v[0], 2) + Math.pow(v[1], 2);\n  var vu = v[0] * u[0] + v[1] * u[1]; // dot product of v and u\n  var t = vu / v2;\n  return [a[0] + v[0] * t, a[1] + v[1] * t];\n}\nexport default function resizeable(map, image, onUpdate) {\n  var mapCanvas = map.getCanvas();\n  var currentIndex;\n  map.addLayer(Object.assign(Object.assign({}, contourLayer), {\n    source: image.polygonSource.id\n  }));\n  map.addLayer(Object.assign(Object.assign({}, cornersLayer), {\n    source: image.cornersSource.id\n  }));\n  function onPointerMove(event) {\n    var pointA = map.project(image.position[currentIndex]);\n    var pointB = map.project(image.position[image.getOppositePoint(currentIndex)]);\n    var pointP = map.project(event.lngLat);\n    var closestPoint = getClosestPoint([pointA.x, pointA.y], [pointB.x, pointB.y], [pointP.x, pointP.y]);\n    var closestLngLat = map.unproject(closestPoint);\n    var scaledPosition = image.position;\n    scaledPosition[currentIndex] = new LngLat(closestLngLat.lng, closestLngLat.lat);\n    setResizeCursor(currentIndex);\n    if (currentIndex === 0) {\n      scaledPosition[1] = new LngLat(scaledPosition[1].lng, closestLngLat.lat);\n      scaledPosition[3] = new LngLat(closestLngLat.lng, scaledPosition[3].lat);\n    } else if (currentIndex === 1) {\n      scaledPosition[0] = new LngLat(scaledPosition[0].lng, closestLngLat.lat);\n      scaledPosition[2] = new LngLat(closestLngLat.lng, scaledPosition[2].lat);\n    } else if (currentIndex === 2) {\n      scaledPosition[3] = new LngLat(scaledPosition[3].lng, closestLngLat.lat);\n      scaledPosition[1] = new LngLat(closestLngLat.lng, scaledPosition[1].lat);\n    } else if (currentIndex === 3) {\n      scaledPosition[2] = new LngLat(scaledPosition[2].lng, closestLngLat.lat);\n      scaledPosition[0] = new LngLat(closestLngLat.lng, scaledPosition[0].lat);\n    }\n    onUpdate(scaledPosition);\n  }\n  function onPointerUp() {\n    currentIndex = null;\n    mapCanvas.style.cursor = '';\n    map.off('mousemove', onPointerMove);\n    map.setLayoutProperty(cornersLayer.id, 'visibility', Visibility.Visible);\n    map.setLayoutProperty(contourLayer.id, 'visibility', Visibility.Visible);\n  }\n  function onPointerDown(event) {\n    event.preventDefault();\n    currentIndex = event.features[0].properties.index;\n    map.on('mousemove', onPointerMove);\n    map.setLayoutProperty(cornersLayer.id, 'visibility', Visibility.None);\n    map.setLayoutProperty(contourLayer.id, 'visibility', Visibility.None);\n    document.addEventListener('pointerup', onPointerUp, {\n      once: true\n    });\n  }\n  function onPointerEnter(event) {\n    setResizeCursor(event.features[0].properties.index);\n  }\n  function onPointerLeave() {\n    mapCanvas.style.cursor = '';\n  }\n  function setResizeCursor(index) {\n    mapCanvas.style.cursor = [1, 3].includes(index) ? Cursor.NESWResize : Cursor.NWSEResize;\n  }\n  map.on('mouseenter', cornersLayer.id, onPointerEnter);\n  map.on('mouseleave', cornersLayer.id, onPointerLeave);\n  map.on('mousedown', cornersLayer.id, onPointerDown);\n  return function () {\n    map.off('mousemove', onPointerMove);\n    map.off('mouseenter', cornersLayer.id, onPointerEnter);\n    map.off('mouseleave', cornersLayer.id, onPointerLeave);\n    map.off('mousedown', cornersLayer.id, onPointerDown);\n    document.removeEventListener('pointerup', onPointerUp);\n    if (map.getLayer(cornersLayer.id)) map.removeLayer(cornersLayer.id);\n    if (map.getLayer(contourLayer.id)) map.removeLayer(contourLayer.id);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}