{"ast":null,"code":"var onParamChange = function onParamChange(event, setId, history, paramName) {\n  var url = new URL(window.location);\n  console.log(url);\n  var queryParams = new URLSearchParams(url.search);\n  setId(event.target.value);\n  if (event.target.value === \"todos\") {\n    url.searchParams.delete(paramName);\n    history.replace({\n      search: queryParams.toString()\n    });\n  } else {\n    url.searchParams.set(paramName, event.target.value);\n    history.push(url.search);\n  }\n};\nvar onDataParamsChange = function onDataParamsChange(history, startDate, endDate) {\n  var url = new URL(window.location);\n  var queryParams = new URLSearchParams(url.search);\n  url.searchParams.delete(startDate);\n  url.searchParams.delete(endDate);\n  history.replace({\n    search: queryParams.toString()\n  });\n};\nexport { onParamChange, onDataParamsChange };","map":{"version":3,"names":["onParamChange","event","setId","history","paramName","url","URL","window","location","console","log","queryParams","URLSearchParams","search","target","value","searchParams","delete","replace","toString","set","push","onDataParamsChange","startDate","endDate"],"sources":["C:/Users/ENhabinde/Desktop/work/New folder/src/utils/services/onParamsChange.js"],"sourcesContent":["\r\n\r\nconst onParamChange = (event, setId, history, paramName) => {\r\n    const url = new URL(window.location);\r\n    console.log(url)\r\n    const queryParams = new URLSearchParams(url.search);\r\n    setId(event.target.value);\r\n    if (event.target.value === \"todos\") {\r\n        url.searchParams.delete(paramName);\r\n        history.replace({\r\n            search: queryParams.toString()\r\n        })\r\n    } else {\r\n        url.searchParams.set(paramName, event.target.value);\r\n        history.push(url.search);\r\n    }\r\n}\r\n\r\nconst onDataParamsChange = (history, startDate, endDate) => {\r\n    const url = new URL(window.location);\r\n    const queryParams = new URLSearchParams(url.search);\r\n    url.searchParams.delete(startDate);\r\n    url.searchParams.delete(endDate);\r\n    history.replace({\r\n        search: queryParams.toString()\r\n    })\r\n}\r\n\r\nexport { onParamChange, onDataParamsChange }"],"mappings":"AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAK;EACxD,IAAMC,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC;EACpCC,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;EAChB,IAAMM,WAAW,GAAG,IAAIC,eAAe,CAACP,GAAG,CAACQ,MAAM,CAAC;EACnDX,KAAK,CAACD,KAAK,CAACa,MAAM,CAACC,KAAK,CAAC;EACzB,IAAId,KAAK,CAACa,MAAM,CAACC,KAAK,KAAK,OAAO,EAAE;IAChCV,GAAG,CAACW,YAAY,CAACC,MAAM,CAACb,SAAS,CAAC;IAClCD,OAAO,CAACe,OAAO,CAAC;MACZL,MAAM,EAAEF,WAAW,CAACQ,QAAQ,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,MAAM;IACHd,GAAG,CAACW,YAAY,CAACI,GAAG,CAAChB,SAAS,EAAEH,KAAK,CAACa,MAAM,CAACC,KAAK,CAAC;IACnDZ,OAAO,CAACkB,IAAI,CAAChB,GAAG,CAACQ,MAAM,CAAC;EAC5B;AACJ,CAAC;AAED,IAAMS,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAInB,OAAO,EAAEoB,SAAS,EAAEC,OAAO,EAAK;EACxD,IAAMnB,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC;EACpC,IAAMG,WAAW,GAAG,IAAIC,eAAe,CAACP,GAAG,CAACQ,MAAM,CAAC;EACnDR,GAAG,CAACW,YAAY,CAACC,MAAM,CAACM,SAAS,CAAC;EAClClB,GAAG,CAACW,YAAY,CAACC,MAAM,CAACO,OAAO,CAAC;EAChCrB,OAAO,CAACe,OAAO,CAAC;IACZL,MAAM,EAAEF,WAAW,CAACQ,QAAQ,CAAC;EACjC,CAAC,CAAC;AACN,CAAC;AAED,SAASnB,aAAa,EAAEsB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}