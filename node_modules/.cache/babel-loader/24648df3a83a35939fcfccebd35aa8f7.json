{"ast":null,"code":"\"use client\";\n\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport { getChildRef } from '@restart/ui/utils';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar transitionStyles = _defineProperty(_defineProperty({}, ENTERING, 'show'), ENTERED, 'show');\nvar OffcanvasToggling = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    _children = _ref.children,\n    _ref$in = _ref.in,\n    inProp = _ref$in === void 0 ? false : _ref$in,\n    _ref$mountOnEnter = _ref.mountOnEnter,\n    mountOnEnter = _ref$mountOnEnter === void 0 ? false : _ref$mountOnEnter,\n    _ref$unmountOnExit = _ref.unmountOnExit,\n    unmountOnExit = _ref$unmountOnExit === void 0 ? false : _ref$unmountOnExit,\n    _ref$appear = _ref.appear,\n    appear = _ref$appear === void 0 ? false : _ref$appear,\n    props = _objectWithoutProperties(_ref, _excluded);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, _objectSpread(_objectSpread({\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear\n  }, props), {}, {\n    childRef: getChildRef(_children),\n    children: function children(status, innerProps) {\n      return /*#__PURE__*/React.cloneElement(_children, _objectSpread(_objectSpread({}, innerProps), {}, {\n        className: classNames(className, _children.props.className, (status === ENTERING || status === EXITING) && \"\".concat(bsPrefix, \"-toggling\"), transitionStyles[status])\n      }));\n    }\n  }));\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","map":null,"metadata":{},"sourceType":"module"}