{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ENhabinde\\\\Desktop\\\\work\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Base from '../Base/Base';\nimport Button from '../Button/Button';\nimport popupTemplate from './popupTemplate';\nimport iconInspect from '../icons/inspect';\nvar InspectControl = /*#__PURE__*/function (_Base) {\n  function InspectControl(options) {\n    var _this;\n    _classCallCheck(this, InspectControl);\n    _this = _callSuper(this, InspectControl);\n    _this.console = options === null || options === void 0 ? void 0 : options.console;\n    _this.popupNode = null;\n    _this.lngLat = null;\n    _this.isInspecting = false;\n    _this.button = new Button();\n    return _this;\n  }\n  _inherits(InspectControl, _Base);\n  return _createClass(InspectControl, [{\n    key: \"insert\",\n    value: function insert() {\n      var _this2 = this;\n      this.addClassName('mapbox-control-inspect');\n      this.button.setIcon(iconInspect());\n      this.button.onClick(function () {\n        if (_this2.isInspecting) {\n          _this2.inspectingOff();\n        } else {\n          _this2.inspectingOn();\n        }\n      });\n      this.addButton(this.button);\n      this.mapClickListener = this.mapClickListener.bind(this);\n      this.updatePosition = this.updatePosition.bind(this);\n    }\n  }, {\n    key: \"inspectingOn\",\n    value: function inspectingOn() {\n      this.isInspecting = true;\n      this.button.addClassName('-active');\n      this.map.on('click', this.mapClickListener);\n      this.map.on('move', this.updatePosition);\n      this.map.getCanvas().style.cursor = 'pointer';\n    }\n  }, {\n    key: \"inspectingOff\",\n    value: function inspectingOff() {\n      this.isInspecting = false;\n      this.button.removeClassName('-active');\n      this.map.off('click', this.mapClickListener);\n      this.map.off('move', this.updatePosition);\n      this.map.getCanvas().style.cursor = '';\n      this.removePopup();\n    }\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures(event) {\n      var selectThreshold = 3;\n      var queryBox = [[event.point.x - selectThreshold, event.point.y + selectThreshold], [event.point.x + selectThreshold, event.point.y - selectThreshold] // top right (NE)\n      ];\n      return this.map.queryRenderedFeatures(queryBox);\n    }\n  }, {\n    key: \"addPopup\",\n    value: function addPopup(features) {\n      this.popupNode = popupTemplate(features);\n      this.mapContainer.appendChild(this.popupNode);\n      this.updatePosition();\n      if (this.console) {\n        console.log(features);\n      }\n    }\n  }, {\n    key: \"removePopup\",\n    value: function removePopup() {\n      if (!this.popupNode) return;\n      this.mapContainer.removeChild(this.popupNode);\n      this.popupNode = null;\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      if (!this.lngLat) return;\n      var canvasRect = this.mapCanvas.getBoundingClientRect();\n      var pos = this.map.project(this.lngLat);\n      this.popupNode.style.left = \"\".concat(pos.x - canvasRect.left, \"px\");\n      this.popupNode.style.top = \"\".concat(pos.y - canvasRect.top, \"px\");\n    }\n  }, {\n    key: \"mapClickListener\",\n    value: function mapClickListener(event) {\n      this.lngLat = event.lngLat;\n      var features = this.getFeatures(event);\n      this.removePopup();\n      this.addPopup(features);\n    }\n  }, {\n    key: \"onAddControl\",\n    value: function onAddControl() {\n      this.mapContainer = this.map.getContainer();\n      this.mapCanvas = this.map.getCanvas();\n      this.insert();\n    }\n  }, {\n    key: \"onRemoveControl\",\n    value: function onRemoveControl() {\n      this.inspectingOff();\n    }\n  }]);\n}(Base);\nexport { InspectControl as default };","map":null,"metadata":{},"sourceType":"module"}